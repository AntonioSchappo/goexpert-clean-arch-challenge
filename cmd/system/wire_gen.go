// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"database/sql"
	"github.com/AntonioSchappo/goexpert-clean-arch-challenge/internal/entity"
	"github.com/AntonioSchappo/goexpert-clean-arch-challenge/internal/event"
	"github.com/AntonioSchappo/goexpert-clean-arch-challenge/internal/infra/database"
	"github.com/AntonioSchappo/goexpert-clean-arch-challenge/internal/infra/web"
	"github.com/AntonioSchappo/goexpert-clean-arch-challenge/internal/usecase"
	"github.com/AntonioSchappo/goexpert-clean-arch-challenge/pkg/events"
	"github.com/google/wire"
)

import (
	_ "github.com/go-sql-driver/mysql"
)

// Injectors from wire.go:

func NewOrderCreateUseCase(db *sql.DB, eventDispatcher events.IEventDispatcher) *usecase.OrderCreateUseCase {
	orderRepository := database.NewOrderRepository(db)
	createdOrder := event.NewCreatedOrder()
	orderCreateUseCase := usecase.NewOrderCreateUseCase(orderRepository, createdOrder, eventDispatcher)
	return orderCreateUseCase
}

func NewOrderListUseCase(db *sql.DB) *usecase.OrderListUseCase {
	orderRepository := database.NewOrderRepository(db)
	orderListUseCase := usecase.NewOrderListUseCase(orderRepository)
	return orderListUseCase
}

func NewWebOrderHandler(db *sql.DB, eventDispatcher events.IEventDispatcher) *web.WebOrderHandler {
	orderRepository := database.NewOrderRepository(db)
	createdOrder := event.NewCreatedOrder()
	webOrderHandler := web.NewWebOrderHandler(orderRepository, createdOrder, eventDispatcher)
	return webOrderHandler
}

// wire.go:

var setRepositoryDependency = wire.NewSet(database.NewOrderRepository, wire.Bind(new(entity.IOrderRepository), new(*database.OrderRepository)))

var setEventDispatcherDependency = wire.NewSet(events.NewEventDispatcher, event.NewCreatedOrder, wire.Bind(new(events.IEventDispatcher), new(*events.EventDispatcher)), wire.Bind(new(events.IEvent), new(*event.CreatedOrder)))

var setOrderCreatedEvent = wire.NewSet(event.NewCreatedOrder, wire.Bind(new(events.IEvent), new(*event.CreatedOrder)))
